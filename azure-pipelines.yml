variables:
  - name: Build.Repository.Clean
    value: true
  - name: _TeamName
    value: AspNetCore
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _HelixType
    value: build/product
  - name: _HelixSource
    value: official/dotnet/HttpRepl/$(Build.SourceBranch)
  - name: _BuildConfig
    value: Release
  - name: _SignType
    value: real

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - /
    exclude:
    - CONTRIBUTING.md
    - README.md
    - SECURITY.md

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates-official/jobs/jobs.yml@self
    parameters:
      enablePublishBuildArtifacts: true
      testResultsFormat: xunit
      enableTelemetry: true
      helixRepo: dotnet/HttpRepl
      enableMicrobuild: true
      jobs:
      - job: Windows
        pool:
          name: $(DncEngInternalBuildPool)
          image: 1es-windows-2022-pt
          os: windows
        variables:
          _OfficialBuildArgs: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:OfficialBuildId=$(Build.BuildNumber)
        steps:
        - checkout: self
          clean: true
        - task: NuGetCommand@2
          displayName: 'Clear NuGet caches'
          condition: succeeded()
          inputs:
            command: custom
            arguments: 'locals all -clear'
        - script: eng\common\cibuild.cmd
            -configuration $(_BuildConfig)
            -prepareMachine
            -integrationTest
            $(_OfficialBuildArgs)
            /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
          name: Build
          displayName: Build
          condition: succeeded()
        - task: PublishBuildArtifacts@1
          displayName: Publish Packages
          continueOnError: true
          inputs:
            artifactName: Packages_$(Agent.Os)_$(Agent.JobName)
            parallel: true
            pathtoPublish: '$(Build.SourcesDirectory)/artifacts/packages/$(_BuildConfig)'
            publishLocation: Container
